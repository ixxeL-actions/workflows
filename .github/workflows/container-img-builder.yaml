---
name: Custom Image Builder CI
on:
  workflow_call:
    secrets:
      github-api-rest-token:
        required: false
      docker-io-pwd:
        required: false
      # git-token:
      #   required: true
    inputs:
    # General
      workingdir:
        required: false
        default: .
        type: string
      img-name:
        required: true
        type: string
      tag:
        required: false
        type: string
      github-api-auth:
        required: false
        default: false
        type: boolean
      build-arg:
        required: false
        default: "CI=true"
        type: string
      target-dir:
        required: false
        default: artefacts
        type: string
      component:
        required: true
        default: build
        type: string
    # Checkov
      artefact:
        required: true
        type: string
      compact:
        required: false
        default: true
        type: string
      quiet:
        required: false
        default: false
        type: string
      no-guide:
        required: false
        default: false
        type: string
      format:
        required: false
        default: cli
        type: string
      threshold:
        required: false
        default: critical
        type: string
      soft-fail:
        required: false
        default: true
        type: string
      gate:
        required: false
        default: '50'
        type: string
      # buildkit
      oci-worker-snapshotter:
        required: false
        default: fuse-overlayfs
        type: string
      dockerfile-frontend:
        required: false
        default: dockerfile.v0
        type: string
      dockerfile-name:
        required: false
        default: Dockerfile
        type: string
      compression-format:
        required: false
        default: tar
        type: string
      buildkit-inline-buildinfo-attrs:
        required: false
        default: true
        type: boolean
      buildkit-inline-cache:
        required: false
        default: true
        type: boolean
      caching:
        required: false
        default: true
        type: boolean
      cache-registry:
        required: false
        type: string
      push:
        description: Push img
        required: false
        default: true
        type: boolean
      force-login:
        required: false
        default: true
        type: boolean
      login-binary:
        required: false
        default: docker
        type: string
      custom-login:
        required: false
        default: false
        type: boolean
      login-registry-user:
        required: false
        type: string
      login-registry-pwd:
        required: false
        type: string
      docker-hub-login:
        required: false
        default: true
        type: boolean
      docker-io-user:
        required: false
        type: string
      transport:
        description: transport type for destination (docker,docker-archive,oci-dir,oci-archive,dir,sbom,registry)
        required: false
        default: docker-archive
        type: string
      fail-on:
        description: set the return code to 1 if a vulnerability is found with a severity >= the given severity
        required: false
        default: critical
        type: string
      output:
        description: report output formatter, formats=[json table cyclonedx template]
        required: false
        default: table
        type: string
      scope:
        description: selection of layers to analyze, options=[Squashed AllLayers]
        required: false
        default: Squashed
        type: string
      template:
        description: specify the path to a Go template file (requires template output to be selected)
        required: false
        default: '""'
        type: string
      verbose:
        description: increase verbosity (-v = info, -vv = debug)
        required: false
        default: ''
        type: string
      # git tag
      git-workdir:
        required: false
        default: .
        type: string
      tag-msg:
        required: false
        default: 'ci'
        type: string
      push-option:
        required: false
        default: ci.skip
        type: string
      git-email:
        required: false
        default: test@mail.com
        type: string
      # repo-url:
      #   required: true

  workflow_dispatch:

jobs:
  # prepare:
  #   name: Prepare
  #   timeout-minutes: 10
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: ixxel/ci-toolbox:latest
  #   steps:
  #   - name: Clone code
  #     uses: actions/checkout@v3
  #   - name: Checkov scan
  #     uses: ixxeL-actions/workflows/.github/actions/checkov@main
  #     with:
  #       workingdir: ${{ inputs.workingdir }}
  #       artefact: ${{ inputs.artefact }}
  #       compact: ${{ inputs.compact }}
  #       quiet: ${{ inputs.quiet }}
  #       no-guide: ${{ inputs.no-guide }}
  #       format: ${{ inputs.format }}
  #       threshold: ${{ inputs.threshold }}
  #       soft-fail: ${{ inputs.soft-fail }}
  #       gate: ${{ inputs.gate }}
  build:
    name: Build
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: ixxel/cd-toolbox:latest
      options: --privileged
    steps:
    - name: Clone code
      id: clone
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Set version
      id: set-version
      uses: ixxeL-actions/workflows/.github/actions/set-version@main
      with:
        component: ${{ inputs.component }}
    - name: Set variables
      id: setvars
      run: |
        if [[ "${{github.base_ref}}" == "main" || "${{github.ref}}" == "refs/heads/main" || "${{github.base_ref}}" == "master" || "${{github.ref}}" == "refs/heads/master" ]]; then
          echo "AUTO_PUSH=false" >> $GITHUB_OUTPUT
        elif [[ "${{github.base_ref}}" =~ "/^release\/.*/" || "${{github.ref}}" =~ "refs/heads/release\/.*" ]]; then
          echo "AUTO_PUSH=true" >> $GITHUB_OUTPUT
        fi
    - name: Buildkit build
      id: buildkit-build
      uses: ixxeL-actions/workflows/.github/actions/buildkit@main
      with:
        workingdir: ${{ inputs.workingdir }}
        img-name: ${{ inputs.img-name }}
        tag: ${{ steps.set-version.outputs.PROJECT_SHORT_VERSION }}
        component: ${{ inputs.component }}
        target-dir: ${{ inputs.target-dir }}
        github-api-rest-token: ${{ secrets.github-api-rest-token }}
        github-api-auth: ${{ inputs.github-api-auth }}
        dockerfile-frontend: ${{ inputs.dockerfile-frontend }}
        dockerfile-name: ${{ inputs.dockerfile-name }}
        build-arg: ${{ inputs.build-arg }}
        push: ${{ steps.setvars.outputs.AUTO_PUSH }}
        caching: ${{ inputs.caching }}
        cache-registry: ${{ inputs.cache-registry }}
        force-login: ${{ inputs.force-login }}
        login-binary: ${{ inputs.login-binary }}
        custom-login: ${{ inputs.custom-login }}
        login-registry-user: ${{ inputs.login-registry-user }}
        login-registry-pwd: ${{ inputs.login-registry-pwd }}
        docker-hub-login: ${{ inputs.docker-hub-login }}
        docker-io-user: ${{ inputs.docker-io-user }}
        docker-io-pwd: ${{ secrets.docker-io-pwd }}
        oci-worker-snapshotter: ${{ inputs.oci-worker-snapshotter }}
    - name: Grype scan
      id: grype-scan
      uses: ixxeL-actions/workflows/.github/actions/grype@main
      continue-on-error: true
      with:
        image-ref: ${{ inputs.target-dir }}/${{ inputs.img-name }}.tar
        transport: ${{ inputs.transport }}
        fail-on: ${{ inputs.fail-on }}
        output: ${{ inputs.output }}
        scope: ${{ inputs.scope }}
        template: ${{ inputs.template }}
        verbose: ${{ inputs.verbose }}
    - name: git tag
      id: git-tag
      if: contains( github.ref, 'release' ) || contains( github.base_ref, 'release' )
      uses: ixxeL-actions/workflows/.github/actions/git-tag@main
      with:
        tag-msg: 'CI release of ${{ inputs.component }} version ${{ steps.set-version.outputs.PROJECT_SHORT_VERSION }}'
        tag-value: ${{ steps.set-version.outputs.PROJECT_SHORT_VERSION }}
        git-workdir: ${{ inputs.git-workdir }}
        push-option: ${{ inputs.push-option }}
        repo-url: ${{ inputs.repo-url }}
        git-email: ${{ inputs.git-email }}
