---
name: Git get last tag
description: Getting last git tag
author: fspiers
inputs:
  git-workdir:
    required: false
    default: .
  pattern:
    required: false
    default: 'v[0-9]*.[0-9]*.[0-9]*' 
outputs:
  LAST_TAG:
    description: last git tag found
    value: ${{ steps.git-get-last-tag.outputs.LAST_TAG }}   

runs:
  using: composite
  steps:
  - id: git-get-last-tag
    run: |
      set +e
      echo -e "${BLUE}[ STEP - DELETE GIT TAG ] > Deleting git tag on origin${BLANK}"
      echo -e "${CYAN}[ INFO ] > Git version.${BLANK}"
      git version

      echo -e "${YELLOW}[ EXECUTING ] > Showing repo information.${BLANK}"
      echo -e "${CYAN}[ INFO ] > git branch.${BLANK}"
      git -C ${{ inputs.git-workdir }} branch
      echo -e "${CYAN}[ INFO ] > git origin.${BLANK}"
      git -C ${{ inputs.git-workdir }} remote show origin

      echo -e "${CYAN}[ INFO ] > Fetching all tags${BLANK}"
      git fetch --force --tags --all

      echo -e "${YELLOW}[ EXECUTING ] > Getting last tag${BLANK}"
      LAST_TAG=$(git -C ${{ inputs.git-workdir }} describe --tags --match ${{ inputs.pattern }} --abbrev=0)
      if [[ -n "${LAST_TAG}" ]]; then
        echo -e "${CYAN}[ INFO ] > Last tag is ${PURPLE}${LAST_TAG}${BLANK}"
      else
        LAST_TAG="v1.0.0"
        echo -e "${CYAN}[ INFO ] > No tags found, using default tag ${PURPLE}${LAST_TAG}${BLANK}"
      fi
      echo "LAST_TAG=$LAST_TAG" >> $GITHUB_OUTPUT
    shell: bash
    env:
      RED: \033[1;31m
      GREEN: \033[1;32m
      YELLOW: \033[1;33m
      BLUE: \033[1;34m
      PURPLE: \033[1;35m
      CYAN: \033[1;36m
      BLANK: \033[0m