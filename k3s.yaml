apiVersion: k3d.io/v1alpha4
kind: Simple
metadata:
  name: test
servers: 1
agents: 0
kubeAPI:
  hostIP: "0.0.0.0"
  hostPort: "6446"
image: rancher/k3s:v1.25.5-k3s1
# volumes:
#   - volume: /home/fred/k3d/k3s-bootstrap/post-deploy/:/var/lib/rancher/k3s/server/manifests/
#     nodeFilters:
#       - server:*
ports:
  - port: 80:80
    nodeFilters:
      - loadbalancer
  - port: 443:443
    nodeFilters:
      - loadbalancer
options:
  k3d:
    wait: true
    timeout: "360s" # should be pretty high for multi-server clusters to allow for a proper startup routine
    disableLoadbalancer: false
    disableImageVolume: false
  k3s:
    extraArgs:
    - arg: --tls-san=127.0.0.1
      nodeFilters:
        - server:*
    - arg: --disable=traefik
      nodeFilters:
        - server:*
  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: true

# apiVersion: k3d.io/v1alpha4
# kind: Simple
# image: docker.io/rancher/k3s:v1.20.5-k3s1
# metadata:
#   name: test
# servers: 1
# agents: 0
# kubeAPI:
#   host: "myhost.my.domain"
#   hostIP: "172.32.0.2"
#   hostPort: "6445"
# subnet: "172.32.0.0/16"
# options:
#   k3d: # k3d runtime settings
#     wait: true # wait for cluster to be usable before returining; same as `--wait` (default: true)
#     timeout: "60s" # wait timeout before aborting; same as `--timeout 60s`
#     disableLoadbalancer: false # same as `--no-lb`
#     disableImageVolume: false # same as `--no-image-volume`
#     disableRollback: false
#   k3s:
#     extraArgs:
#       - arg: --disable=traefik,servicelb,metrics-server
#         nodeFilters:
#           - server:*
#       - arg: --advertise-address=172.32.0.2
#         nodeFilters:
#           - server:*
#       - arg: --advertise-port=6443
#         nodeFilters:
#           - server:*
#       - arg: --bind-address=172.32.0.2
#         nodeFilters:
#           - server:*
#       - arg: --https-listen-port=6443
#         nodeFilters:
#           - server:*
#   kubeconfig:
#     updateDefaultKubeconfig: true
#     switchCurrentContext: true